---
title: "Glossary"
sidebar: "teaching"
---

# General

::::: {.columns}
:::{.column}

### English

- increasing function
- nondecreasing function
- interval $[a,b)$

:::

:::{.column}

### French

- fonction strictement croissante
- fonction croissante
- intervalle $[a,b[$


:::
:::::

# Probability/Statistics

::::: {.columns}
:::{.column}

### English

- probability distribution
- expectation
- likelihood
- distribution tail
- **CDF** (Cumul. Distrib. Func.)
- **PDF** (Proba. Density Func.)

:::

:::{.column}

### French

- loi de probabilité
- espérance
- vraissemblance
- queue de distribution
- Fonction de Répartition
- Densité d'une distribution
:::

:::::

# Hypothesis Testing

::::: {.columns}
:::{.column}

### English

- A sample
- one-sided test
- two-sided test
- chi-squared goodness of fit test
- chi-squared homogeneity test

:::

:::{.column}

### French

- Un échantillon
- test unilatéral
- test bilatéral
- test d'adéquation du Khi-deux
- test d'homogénéité du Khi-deux

:::
:::::


# Programming Languages

:::{style="font-size: 90%;"}

:::: {.columns}



::: {.column width=100%}
### Julia
```julia
using Distributions

n = 100
x = 20
p = 0.5
q = 0.95

cdf(Binomial(n, p), x)
quantile(Binomial(n,p), q)
cdf(Normal(0,1), x)
quantile(Normal(0,1), q)

cdf(Chisq(n), x) # Chi-squared
cdf(TDist(n), x) # Student

n1,n2 = 5,10
cdf(FDist(n1, n2), x) # Fisher

lmbda = 2
cdf(Gamma(n, lmbda), x) # Gamma
cdf(Poisson(lmbda), x) # Poisson
```
:::

::: {.column width=50%}
### Python
```python
from scipy.stats import *

n = 100
x = 20
p = 0.5
q = 0.95

binom.cdf(x, n, p)
binom.ppf(q, n, p) # Quantile
norm.cdf(x)
norm.ppf(q)

chi2.cdf(x, n)
t.cdf(x, n) # Student

n1,n2 = 5,10
f.cdf(x, n1, n2) # Fisher

lmbda = 2
gamma.cdf(x,n,lmbda) # Gamma
poisson.cdf(x, lmbda) # Poisson
```

:::

::: {.column width=50%}
### R
```R


n = 100
x = 20
p = 0.5
q = 0.95

pbinom(x, n, p)
qbinom(q, n, p)
pnorm(x)
qnorm(q)

pchisq(x, n)
pt(x, n)

n1,n2 = 5,10
pf(x, n1,n2)

lmbda = 2
pgamma(x,n,lmbda) 
ppois(x, lmbda)

```

:::
::::

:::
